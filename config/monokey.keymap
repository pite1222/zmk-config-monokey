#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt { quick-tap-ms = <300>; };

/ {
    combos {
        compatible = "zmk,combos";

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        zed_em_kay: zed_em_kay {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp Z &kp M &kp K>,
                <&macro_release>,
                <&kp LSHFT>;
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <300>;
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N1>, <&kp N2>, <&kp N3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W           &kp E         &kp R                   &kp T                                &kp Y            &kp U                    &kp I     &kp O               &kp P
&mt LCTRL A       &kp S           &kp D         &kp F                   &kp G                                &kp H            &kp J                    &kp K     &lt_to_layer_0 5 L  &mt RCTRL ENTER
&mt LEFT_SHIFT Z  &kp X           &kp C         &kp V                   &kp B                                &kp N            &kp M                    &mkp MB1  &mkp MB2            &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_SHIFT  &kp LEFT_ALT  &mt LEFT_COMMAND LANG2  &lt 1 SPACE  &lt_to_layer_0 2 TAB    &lt 3 BACKSPACE  &mt RIGHT_COMMAND LANG1                                &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT           &kp CARET          &kp AMPERSAND     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp F1           &kp F2       &kp F3    &kp F4      &kp F5                &kp DOUBLE_QUOTES  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS             &kp EQUAL
&kp F6           &kp F7       &kp F8    &kp F9      &kp F10               &kp COLON          &trans            &kp COMMA          &kp PERIOD            &kp BACKSLASH
&kp F11          &kp F12      &trans    &trans      &trans       &mo 6    &trans             &trans                                                     &trans
            >;
        };

        NUM {
            bindings = <
&trans  &trans  &trans  &trans  &trans            &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0        &trans
&trans  &trans  &trans  &trans  &trans            &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS      &kp MINUS
&trans  &trans  &trans  &trans  &trans            &kp N7        &kp N8        &kp N9        &kp ASTERISK  &kp SLASH
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS     &kp PERIOD                                &trans
            >;
        };

        ARROW {
            bindings = <
&trans  &trans  &trans  &trans  &trans            &trans  &trans          &kp UP_ARROW    &trans           &trans
&trans  &trans  &trans  &trans  &trans            &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans          &trans          &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                           &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                  &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans            &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans            &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans                                    &bootloader
            >;
        };
    };
};
